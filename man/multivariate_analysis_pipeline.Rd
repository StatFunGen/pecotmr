% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multivariate_pipeline.R
\name{multivariate_analysis_pipeline}
\alias{multivariate_analysis_pipeline}
\title{Multivariate Analysis Pipeline}
\usage{
multivariate_analysis_pipeline(
  X,
  Y,
  maf,
  max_L = 30,
  ld_reference_meta_file = NULL,
  pip_cutoff_to_skip = 0,
  signal_cutoff = 0.025,
  coverage = c(0.95, 0.7, 0.5),
  data_driven_prior_matrices = NULL,
  data_driven_prior_matrices_cv = NULL,
  canonical_prior_matrices = TRUE,
  sample_partition = NULL,
  mrmash_max_iter = 5000,
  mvsusie_max_iter = 200,
  min_cv_maf = 0.05,
  max_cv_variants = -1,
  cv_folds = 5,
  cv_threads = 1,
  cv_seed = 999,
  prior_weights_min = 1e-04,
  twas_weights = FALSE,
  verbose = 0
)
}
\arguments{
\item{X}{A matrix of genotype data where rows represent samples and columns represent genetic variants.}

\item{Y}{A matrix of phenotype measurements, representing samples and columns represent conditions.}

\item{maf}{A list of vectors for minor allele frequencies for each variant in X.}

\item{max_L}{The maximum number of components in mvSuSiE. Default is 30.}

\item{ld_reference_meta_file}{An optional path to a file containing linkage disequilibrium reference data. If provided, variants in X are filtered based on this reference.}

\item{pip_cutoff_to_skip}{Cutoff value for skipping conditions based on PIP values. Default is 0.}

\item{signal_cutoff}{Cutoff value for signal identification in PIP values for susie_post_processor. Default is 0.025.}

\item{coverage}{A vector of coverage probabilities, with the first element being the primary coverage and the rest being secondary coverage probabilities for credible set refinement. Defaults to c(0.95, 0.7, 0.5).}

\item{data_driven_prior_matrices}{A list of data-driven covariance matrices for mr.mash weights.}

\item{data_driven_prior_matrices_cv}{A list of data-driven covariance matrices for mr.mash weights in cross-validation.}

\item{canonical_prior_matrices}{If set to TRUE, will compute canonical covariance matrices and add them into the prior covariance matrix list in mrmash_wrapper. Default is TRUE.}

\item{sample_partition}{Sample partition for cross-validation.}

\item{mrmash_max_iter}{The maximum number of iterations for mr.mash. Default is 5000.}

\item{mvsusie_max_iter}{The maximum number of iterations for mvSuSiE. Default is 200.}

\item{min_cv_maf}{The minimum minor allele frequency for variants to be included in cross-validation. Default is 0.05.}

\item{max_cv_variants}{The maximum number of variants to be included in cross-validation. Defaults to -1 which means no limit.}

\item{cv_folds}{The number of folds to use for cross-validation. Set to 0 to skip cross-validation. Default is 5.}

\item{cv_threads}{The number of threads to use for parallel computation in cross-validation. Defaults to 1.}

\item{cv_seed}{The seed for random number generation in cross-validation. Defaults to 999.}

\item{prior_weights_min}{The minimum weight for prior covariance matrices. Default is 1e-4.}

\item{twas_weights}{If set to TRUE, computes TWAS weights. Default is FALSE.}

\item{verbose}{Verbosity level. Default is 0.}
}
\value{
A list containing the multivariate analysis results.
}
\description{
This function performs weights computation for Transcriptome-Wide Association Study (TWAS) with fitting
models using mvSuSiE and mr.mash with the option of using a limited number of variants selected from
mvSuSiE fine-mapping for computing TWAS weights with cross-validation.
}
\examples{
library(pecotmr)

data(multitrait_data)
attach(multitrait_data)

data_driven_prior_matrices <- list(
  U = prior_matrices,
  w = rep(1 / length(prior_matrices), length(prior_matrices))
)

data_driven_prior_matrices_cv <- lapply(prior_matrices_cv, function(x) {
  list(U = x, w = rep(1 / length(x), length(x)))
})

result <- multivariate_analysis_pipeline(
  X = multitrait_data$X[, 1:100],
  Y = multitrait_data$Y,
  maf = colMeans(multitrait_data$X[, 1:100]) ,
  max_L = 10,
  ld_reference_meta_file = NULL,
  max_cv_variants = -1,
  pip_cutoff_to_skip = 0.025,
  signal_cutoff = 0.025,
  data_driven_prior_matrices = data_driven_prior_matrices,
  data_driven_prior_matrices_cv = data_driven_prior_matrices_cv,
  canonical_prior_matrices = TRUE,
  sample_partition = NULL,
  cv_folds = 5,
  cv_seed = 999,
  cv_threads = 2,
  prior_weights_min = 1e-4,
  twas_weights = FALSE
)
}
